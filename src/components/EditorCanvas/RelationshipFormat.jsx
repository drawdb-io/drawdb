export function CrowOM(
  pathRef, 
  cardinalityEndX, 
  cardinalityEndY, 
  cardinalityStartX, 
  cardinalityStartY,  
  direction, 
  cardinalityStart, 
  cardinalityEnd
) {
    
    return(
        pathRef &&(
            <>
              <line
                x1={cardinalityEndX-(20*direction)}
                y1={cardinalityEndY+15}
                x2={cardinalityEndX-(20*direction)}
                y2={cardinalityEndY-15}
                stroke="gray"
                strokeWidth='2'
                className="group-hover:fill-sky-700"
              />
                <line
                    x1={cardinalityEndX-(20*direction)}
                    y1={cardinalityEndY}
                    x2={cardinalityEndX+1}
                    y2={cardinalityEndY-10}
                    stroke="gray"
                    strokeWidth='2'
                    className="group-hover:fill-sky-700"
                />
                <line
                    x1={cardinalityEndX-20*direction}
                    y1={cardinalityEndY}
                    x2={cardinalityEndX+1}
                    y2={cardinalityEndY+10}
                    stroke="gray"
                    strokeWidth='2'
                    className="group-hover:fill-sky-700"
                />
                <text
                    x={cardinalityStartX-5}
                    y={cardinalityStartY-20}
                    fill= "gray"
                    strokeWidth="0.5"
                    textAnchor="middle"
                    alignmentBaseline="middle"
                >
                    {cardinalityStart}
                </text>
                <text
                    x={cardinalityEndX-8}
                    y={cardinalityEndY-24}
                    fill="gray"
                    strokeWidth="0.5"
                    textAnchor="middle"
                    alignmentBaseline="middle"
                >
                    {cardinalityEnd}
                </text>
                <line
                  x1={cardinalityStartX-(15*direction)}
                  y1={cardinalityStartY+10}
                  x2={cardinalityStartX-(15*direction)}
                  y2={cardinalityStartY-10}
                  stroke="gray"
                  strokeWidth='2'
                  className="group-hover:fill-sky-700"
                />
                <line
                  x1={cardinalityStartX-(10*direction)}
                  y1={cardinalityStartY+10}
                  x2={cardinalityStartX-(10*direction)}
                  y2={cardinalityStartY-10}
                  stroke="gray"
                  strokeWidth='2'
                  className="group-hover:fill-sky-700"
                />
            </>
        )
    )
}

export function CrowOO(
  pathRef, 
  cardinalityEndX, 
  cardinalityEndY, 
  cardinalityStartX, 
  cardinalityStartY,  
  direction, 
  cardinalitySart, 
  cardinalityEnd
) {
    return(
        pathRef && (
            <>
            <line
              x1={cardinalityEndX-(15*direction)}
              y1={cardinalityEndY+10}
              x2={cardinalityEndX-(15*direction)}
              y2={cardinalityEndY-10}
              stroke="gray"
              strokeWidth='2'
              className="group-hover:fill-sky-700"
            />

            <line
              x1={cardinalityEndX-(10*direction)}
              y1={cardinalityEndY+10}
              x2={cardinalityEndX-(10*direction)}
              y2={cardinalityEndY-10}
              stroke="gray"
              strokeWidth='2'
              className="group-hover:fill-sky-700"
            />
            <line
              x1={cardinalityStartX-(15*direction)}
              y1={cardinalityStartY+10}
              x2={cardinalityStartX-(15*direction)}
              y2={cardinalityStartY-10}
              stroke="gray"
              strokeWidth='2'
              className="group-hover:fill-sky-700"
            />
            <line
              x1={cardinalityStartX-(10*direction)}
              y1={cardinalityStartY+10}
              x2={cardinalityStartX-(10*direction)}
              y2={cardinalityStartY-10}
              stroke="gray"
              strokeWidth='2'
              className="group-hover:fill-sky-700"
            />

            <text
              x={cardinalityStartX-8}
              y={cardinalityStartY-20}
              fill="gray"
              strokeWidth="0.5"
              textAnchor="middle"
              alignmentBaseline="middle"
            >
              {cardinalitySart}
            </text>
            <text
                x={cardinalityEndX-15}
                y={cardinalityEndY-20}
                fill="gray"
                strokeWidth="0.5"
                textAnchor="middle"
                alignmentBaseline="middle"
            >
                {cardinalityEnd}
            </text>
            </>
        )
    )
}

export function DefaultNotation(
  pathRef, 
  cardinalityEndX, 
  cardinalityEndY, cardinalityStartX, 
  cardinalityStartY, 
  cardinalityStart, 
  cardinalityEnd
) {
  return(
      pathRef && (
        <>
            <circle
              cx={cardinalityStartX}
              cy={cardinalityStartY}
              r="12"
              fill="grey"
              className="group-hover:fill-sky-700"
            />
            <text
              x={cardinalityStartX}
              y={cardinalityStartY}
              fill="white"
              strokeWidth="0.5"
              textAnchor="middle"
              alignmentBaseline="middle"
            >
              {cardinalityStart}
            </text>
            <circle
              cx={cardinalityEndX}
              cy={cardinalityEndY}
              r="12"
              fill="grey"
              className="group-hover:fill-sky-700"
            />
            <text
              x={cardinalityEndX}
              y={cardinalityEndY}
              fill="white"
              strokeWidth="0.5"
              textAnchor="middle"
              alignmentBaseline="middle"
            >
              {cardinalityEnd}
            </text>
          </>
      )
  )
}

export function IDEFZM(
  pathRef, 
  cardinalityEndX, 
  cardinalityEndY, 
  cardinalityStartX, 
  cardinalityStartY,  
  direction, 
  cardinalityStart, 
  cardinalityEnd
) {
  return(
      pathRef && (
          <>
            <circle
              cx={cardinalityEndX-(3*direction)}
              cy={cardinalityEndY}
              r="4"
              stroke="gray"
              strokeWidth='2'
              fill="grey"
              className="group-hover:fill-sky-700"
            />
              <text
                  x={cardinalityStartX-8}
                  y={cardinalityStartY-20}
                  fill="grey"
                  strokeWidth="0.5"
                  textAnchor="middle"
                  alignmentBaseline="middle"
              >
                  {cardinalityStart}
              </text>
              <text
                  x={cardinalityEndX-15}
                  y={cardinalityEndY-20}
                  fill="grey"
                  strokeWidth="0.5"
                  textAnchor="middle"
                  alignmentBaseline="middle"
              >
                  {cardinalityEnd}
              </text>
          </>
      )
  )
}
